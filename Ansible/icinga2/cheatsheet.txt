# Add Ansible repo on centos1
yum install -y centos-release-ansible-29

# Install Ansible on centos1
yum install -y ansible

# Setup hosts on centos1
echo "ubuntu1" >> /etc/ansible/hosts

# Add user on ubuntu1
adduser --gecos "User for Ansible automation" ansible # password is ansible

# Setup ssh access from root@centos1 to [root|ansible]@ubuntu1
ssh-copy-id -i /root/.ssh/id_rsa.pub ansible@ubuntu1
sudo sed -i '/^\#PermitRootLogin.*/a PermitRootLogin yes' /etc/ssh/sshd_config 
sudo systemctl restart sshd
ssh-copy-id -i /root/.ssh/id_rsa.pub client2
ssh ansible@ubuntu1 date
ssh ubuntu1 date

# -------------------------
# Test Ansible from centos1
# -------------------------
ansible -m ping all -e ansible_user=ansible # can also just use --user ansible here
ansible -m ping all

# --------------------------------------
# Install collection from Ansible galaxy
# --------------------------------------
# https://galaxy.ansible.com/fiaasco/icinga2 
# Other useful links: 
# https://gitlab.com/bodsch/ansible-icinga2
# https://git.coop/webarch/icinga-network
# https://git.coop/webarch/icinga
# https://git.coop/webarch/icingaweb
# cd /root/.ansible/collections/ansible_collections/fiaasco/icinga2
# ansible-galaxy install -r requirements.yml # this will install the [mariadb|php7|apache] roles from "fiaasco" (though these only seem to be used on Debian installations)

# -----------------------
# Prepare master playbook
# -----------------------
This creates a LAMP stack. Probably not required when done for real. 
Created an inventory file 'icinga_hosts', using ini format and [group_vars|host_vars] directories and .yml files in each with details.
group_vars/icinga2master.yml contains details for the db and enable_ha etc.
ansible -m ping all -i icinga2_hosts
ansible-playbook -i icinga2_hosts ./playbooks/prepare-master.yml
ansible-playbook playbooks/prepare-master.yml -i icinga2_hosts2

################
# First master #
################
# This also installs icingaweb2
# Ensure group_vars file is correct for icinga2master.yml including master/satellite host names and db details and enable_ha etc.
# If the DB is remote, a suitable user will need to be used! (ie not localhost)
ansible-playbook -i icinga2_hosts ./playbooks/icinga2-master.yml

Now browse to http://192.168.1.203/icingaweb2/authentication/login (icingaadmin/password)

#################
# Second master #
#################
# To set up a second master, create it as an agent and modify the generated configuration...
# Edit hosts file and host entry under group icinga2secondmaster
# Edit group_vars file icinga2secondmaster.yml with correct details
ansible-playbook -i icinga2_hosts playbooks/icinga2-second-master.yml

Issues:
/etc/ansible/icinga2/playbooks/roles/icinga2_hostconfig/handlers/main.yml
changed from service to command ("/usr/lib/icinga2/safe-reload")

zones.conf on the masters need "host" attributes for each other - needs fixing in template code - CHECK THIS
zones.conf on the satellite needs updating with second master - needs fixing in template code - CREATE TEMPLATE
enable_ha = true on both servers - needs fixing in template code

https://monitoring-portal.org/woltlab/index.php?thread/38548-configuring-high-available-master-icinga2/

# https://icinga.com/docs/icinga2/latest/doc/14-features/#db-ido-in-cluster-ha-zones
# ido-mysql feature needs enabling on the second master
# ll /etc/icinga2/features-available/ido-mysql.conf
# icinga2 feature enable ido-mysql
# HA mode SHOULD be enabled automatically:
# https://icinga.com/docs/icinga2/latest/doc/06-distributed-monitoring/#distributed-monitoring-high-availability-db-ido

#####################
# Install satellite #
#####################
Code copied to /etc/ansible/icinga and tidied up a little
Moved roles dir into playbooks dir
centos82 added to icinga2_hosts as satellite server
cd /etc/ansible/icinga2
ansible-playbook -i icinga2_hosts ./playbooks/icinga2-satellite.yml

Issues: 
1) ansible_fqdn fact HAS to match hostname -f command, and be the same in the inventory ?? Check this
edited /etc/ansible/icinga2/playbooks/roles/icinga2_client/tasks/main.yml 

2) delegated icinga2 restart on centos81 sometimes fails - normally works with /usr/lib/icinga2/safe-reload

##########################
# MariaDB/MySQL commands #
##########################
mysql
show databases;
connect icingaweb;
show tables;
select * from icingaweb_user ;

select Host, User, Password from mysql.user;
create user 'icinga2'@'192.168.1.209' identified by 'password';
select Host, User, Password from mysql.user;
grant all privileges on icinga2.* to 'icinga2'@'192.168.1.209';
FLUSH PRIVILEGES; # needed after grant to apply privs

edited /etc/my.cnf.d/mariadb-server.cnf (or /etc/mysql/mysql.conf.d/mysqld.cnf) and changed 'bind-address = 0.0.0.0' 

Show whether icinga2 is updating the db:

MariaDB [icinga2]>  SELECT status_update_time FROM icinga_programstatus ps
    -> JOIN icinga_instances i ON ps.instance_id=i.instance_id
    -> WHERE (UNIX_TIMESTAMP(ps.status_update_time) > UNIX_TIMESTAMP(NOW())-60)
    -> AND i.instance_name='default';
+---------------------+
| status_update_time  |
+---------------------+
| 2020-07-29 13:29:27 |
+---------------------+
1 row in set (0.001 sec)

##############################################
# Generate a new salt and encrypted password #
##############################################
salt=$(openssl rand -base64 6)
openssl passwd -1 -salt $salt password
$1$gASNyotX$va/10rmrQnf7r/Rsj0RPT0
UPDATE icingaweb_user SET password_hash='$1$gASNyotX$va/10rmrQnf7r/Rsj0RPT0' WHERE name = 'icingaadmin';
mysql -u icingaweb --password=password

# --------------------------
# Install client playbook
# --------------------------
Must create host_vars file for new client first!
ansible-playbook -i icinga2_hosts ./playbooks/icinga2-client.yml

Issues:
RUNNING HANDLER [icinga2_hostconfig : reload master icinga2] *************************************
failed: [ubuntu1 -> centos81] (item=centos81) => {"ansible_loop_var": "item", "changed": false, "item": 
"centos81", "msg": "Unable to reload service icinga2: Job for icinga2.service failed.\nSee \"systemctl status icinga2.service\" and \"journalctl -xe\" for details.\n"}
Caused in line 27 of /usr/lib/icinga2/safe-reload
Jul 23 12:05:40 centos81 safe-reload[7318]: Validating config files: /usr/lib/icinga2/safe-reload: line 27: /tmp/tmp.Wnu
It fails because of this: 
/usr/sbin/icinga2 daemon --validate --color has warnings in it. There are rules files which don't match anywhere.
I have 'fixed' this by adding a '-x critical' to the command above in /usr/lib/icinga2/safe-reload

# -----
# Zones
# -----
/etc/icinga2/zones.conf is a key file!
see examples on centos81/2/client1

Zones are defined in /etc/icinga2/zones.d/{zonename} on the master
There should be a .conf file for each node in the relevant zonename directory
In the {node}.conf file there should be Host/Endpoint/Zone definitions

# ------------------------------
# Templates (checks/scripts etc)
# ------------------------------
/etc/icinga2/zones.d/global-templates/
e.g. /etc/icinga2/zones.d/global-templates/checks/linux/time.conf
changed vars.ntp_address = "2.centos.pool.ntp.org"
Updating this in here will automatically distribute the updated scripts to all clients

Fixed /etc/icinga2/zones.d/global-templates/checks/linux/chronyd.conf
Added && host.vars.ansible_os_family != "Debian"

Changed /etc/icinga2/zones.d/global-templates/checks/linux/mailq.conf
and added host.vars.mailq == "true"

/usr/lib/icinga2/safe-reload


###########################
# icinga2 troubleshooting #
###########################
centos1 = ansible control host
centos81 = master
centos82 = satellite
client1 = centos8
client2 = centos8
client3 = centos7
client4 = ubuntu20

icinga2 daemon -C # performs configuration checks
icinga2 object list --type host --name client1
icinga2 object list --type endpoint
icinga2 object list --type zone --name master
icinga2 ca list --all # list pending signing requests
icinga2 ca sign [[fingerprint]] # sign the request
icinga2 node wizard # manually sort the connection
icinga2 feature list

yum install -y git
git clone https://github.com/nbuchwitz/ansible-icinga2.git
cd /etc/ansible/icinga2/toby/ansible-icinga2
ansible-playbook -i icinga2_hosts ./playbooks/icinga2_client.yml
client1 # icinga2 daemon -C
firewall-cmd --zone=public --permanent --add-port=5665/tcp
firewall-cmd --zone=public --permanent --list-ports

#####################
# Satellite clients #
#####################
# From centos1
# Create host_vars file in /etc/ansible/icinga2/host_vars setting zone: satellite # investigate all.yml or change default zone?
# cd /etc/ansible/icinga2
# edit inventory (icinga2_hosts) as required
ansible-playbook -i icinga2_hosts playbooks/icinga2-client.yml
# Just the one problem - safe-reload (fails because some scripts don't have valid targets)

#################
# Health Checks #
#################
Ansible puts them here: /etc/icinga2/zones.d/global-templates/checks/all
Created cluster.conf and health.conf in /etc/icinga2/zones.d/master
Created health.conf in /etc/icinga2/zones.d/satellite
New ones in centos1:/etc/ansible/icinga2/config_files

#################
# Custom Checks #
#################
Template library reference is here: https://icinga.com/docs/icinga2/latest/doc/10-icinga-template-library/
https://exchange.icinga.com/
Custom checks can be added in master:/usr/lib64/nagios/plugins (shell/python etc.)
Also add the script to the clients in /usr/lib[64]/nagios/plugins # Not 64 on Ubuntu
Then create a configuration file in /etc/icinga2/zones.d/global-templates/checks/linux e.g. service.conf
Now create a CheckCommand object in commands.conf (in global-templates (or conf.d?))
See example files: 
centos81:/usr/lib64/nagios/plugins/check_[service|selinux]
centos81:/etc/icinga2/zones.d/global-templates/commands.conf
centos81:/etc/icinga2/zones.d/global-templates/checks/linux/[selinux|firewall].conf

##########################
# icinga2 web dashboards #
##########################
Added this to the playbook
/etc/icingaweb2/dashboards/icingaadmin/dashboard.ini
ensure ownership is apache:icingaweb2
Content:
[Current Incidents.Service Grid]
url = "monitoring/list/servicegrid"
title = "Service Grid"

######################
# Jira notifications #
######################
https://icinga.com/docs/jira/latest/
https://icinga.com/docs/jira/latest/doc/03-Configuration/
yum install -y wget

Install:
ICINGAWEB_MODULEPATH="/usr/share/icingaweb2/modules"
REPO_URL="https://github.com/Icinga/icingaweb2-module-jira"
TARGET_DIR="${ICINGAWEB_MODULEPATH}/jira"
MODULE_VERSION="1.0.0"
URL="${REPO_URL}/archive/v${MODULE_VERSION}.tar.gz"
install -d -m 0755 "${TARGET_DIR}"
wget -q -O - "$URL" | tar xfz - -C "${TARGET_DIR}" --strip-components 1

Enable:
icingacli module enable jira

Configure:
install -d -m 2770 -o apache -g icingaweb2 /etc/icingaweb2/modules/jira
vi /etc/icingaweb2/modules/jira/config.ini
...

############
# Graphite #
############
Perform steps in graphite cheatsheet
Modify master:/etc/icinga2/features-available/graphite.conf with server details
icinga2 feature enable graphite
systemctl restart icinga2

#################
# Remove client #
#################
cd /etc/ansible/icinga2
ansible-playbook playbooks/icinga2-remove-client.yml -i icinga2_hosts -e "client=client3"

##############
# Map module #
##############
ICINGAWEB_MODULEPATH="/usr/share/icingaweb2/modules"
REPO_URL="https://github.com/nbuchwitz/icingaweb2-module-map"
TARGET_DIR="${ICINGAWEB_MODULEPATH}/map"
MODULE_VERSION="1.1.0"
URL="${REPO_URL}/archive/v${MODULE_VERSION}.tar.gz"
install -d -m 0755 "${TARGET_DIR}"
wget -q -O - "$URL" | tar xfz - -C "${TARGET_DIR}" --strip-components 1

Enable:
icingacli module enable map

errors with CharSet in the db: https://community.icinga.com/t/workaround-database-character-set-broken/2354
vi /etc/icingaweb2/resources.ini
charset = "latin1" in [icinga_ido] stanza

To add hosts to the map, add the variable vars.geolocation = "<latitude,longtitude>" to a host object
Southbourne: vars.geolocation = "50.8509047,-0.9150602"
Hedge End: vars.geolocation = "50.9220319,-1.3101452"
